process {
    executor    = params.executor
    queue       = params.queue 
    time        = '1.h'
    memory      = '1.GB'
    cpus        = 2

    withName: add_igv_track {
        container           = (params.offline ? "${params.containers_dir}/bonsai-prp.sif" : "docker://clinicalgenomicslund/bonsai-prp:1.3.1" )
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/analysis_result", mode: 'copy', overwrite: true ]
        ext.when            = { params.species == "mycobacterium tuberculosis" }
    }
    withName: amrfinderplus {
        container           = (params.offline ? "${params.containers_dir}/ncbi-amrfinderplus.sif" : "https://depot.galaxyproject.org/singularity/ncbi-amrfinderplus:3.11.11--h6e70893_0")
        cpus                = 4
        memory              = '10.GB'
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/amrfinderplus", mode: 'copy', overwrite: true ]
        ext.args            = "--plus"
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
    withName: annotate_delly {
        container           = (params.offline ? "${params.containers_dir}/bonsai-prp.sif" : "docker://clinicalgenomicslund/bonsai-prp:1.3.1")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/${params.vcf_dir}", mode: 'copy', overwrite: true ]
        ext.when            = { params.species == "mycobacterium tuberculosis" }
    }
    withName: assembly_trim_clean {
        container           = (params.offline ? "${params.containers_dir}/perl-json.sif" : "https://depot.galaxyproject.org/singularity/perl-json:4.10--pl5321hdfd78af_0")
        cpus                = 4
        memory              = '10.GB'
        ext.args            = "--min_quality 23 --bases_to_trim 400 --min_length 100 -p 1 --nosingletons"
        ext.when            = { params.platform == "iontorrent" }
    }
    withName: bracken {
        container           = (params.offline ? "${params.containers_dir}/bracken.sif" : "https://depot.galaxyproject.org/singularity/bracken:2.8--py39hc16433a_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/kraken", mode: 'copy', overwrite: true ]
        ext.args            = "-r 150"
        ext.when            = { params.use_kraken }
    }
    withName: bwa_index {
        container           = (params.offline ? "${params.containers_dir}/bwakit.sif" : "https://depot.galaxyproject.org/singularity/bwakit:0.7.17.dev1--hdfd78af_1")
        ext.args            = "-M"
        ext.when            = { params.species != "mycobacterium tuberculosis" && params.platform in ["illumina", "iontorrent"] }
    }
    withName: bwa_mem_assembly {
        container           = (params.offline ? "${params.containers_dir}/bwakit.sif" : "https://depot.galaxyproject.org/singularity/bwakit:0.7.17.dev1--hdfd78af_1")
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = (params.ci ? params.ci_mem_max : '20.GB')
        ext.args            = "-M"
        ext.when            = { params.species != "mycobacterium tuberculosis" && params.platform in ["illumina", "iontorrent"] }
    }
    withName: bwa_mem_ref {
        container           = (params.offline ? "${params.containers_dir}/bwakit.sif" : "https://depot.galaxyproject.org/singularity/bwakit:0.7.17.dev1--hdfd78af_1")
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = (params.ci ? params.ci_mem_max : '20.GB')
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/${params.bam_dir}", mode: 'copy', overwrite: true ]
        ext.args            = "-M"
        ext.when            = { params.reference_genome && params.species != "mycobacterium tuberculosis" && params.platform in ["illumina", "iontorrent"] }
    }
    withName: chewbbaca_allelecall {
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = '12.GB'
        container           = (params.offline ? "${params.containers_dir}/chewbbaca.sif" : "https://depot.galaxyproject.org/singularity/chewbbaca:3.3.2--pyhdfd78af_0")
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
    withName: chewbbaca_create_batch_list {
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
    withName: chewbbaca_split_results {
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/chewbbaca", mode: 'copy', overwrite: true ]
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
    withName: create_yaml {
        container           = (params.offline ? "${params.containers_dir}/bonsai-prp.sif" : "docker://clinicalgenomicslund/bonsai-prp:1.3.1")
        publishDir          = [ [ path: "${params.outdir}/${params.species_dir}/analysis_yaml", mode: 'copy', overwrite: true ] ] + (params.copy_to_cron ? [ [ path: "/fs1/results/cron/jasen/${params.species_dir}", mode: 'copy', overwrite: true ] ] : [])
    }
    withName: emmtyper {
        container           = (params.offline ? "${params.containers_dir}/emmtyper.sif" : "https://depot.galaxyproject.org/singularity/emmtyper:0.2.0--py_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/emmtyper", mode: 'copy', overwrite: true ]
        ext.when            = { params.species in ["streptococcus", "streptococcus pyogenes"] }
    }
    withName: export_to_cdm {
        publishDir          = [ [ path: "${params.outdir}/${params.species_dir}/qc", mode: 'copy', overwrite: true ] ] + (params.copy_to_cron ? [ [ path: "/fs1/results/cron/qc", mode: 'copy', overwrite: true ] ] : [])
    }
    withName: fastqc {
        cpus                = 4
        memory              = '2.GB'
        container           = (params.offline ? "${params.containers_dir}/fastqc.sif" : "https://depot.galaxyproject.org/singularity/fastqc:0.12.1--hdfd78af_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/fastqc", mode: 'copy', overwrite: true ]
        ext.when            = { params.platform in ["illumina", "iontorrent"] }
    }
    withName: flye {
        container           = (params.offline ? "${params.containers_dir}/flye.sif" : "https://depot.galaxyproject.org/singularity/flye:2.9.3--py39hd65a603_0")
        cpus                = (params.ci ? params.ci_cpus_max : 20)
        memory              = (params.ci ? params.ci_mem_max : '32.GB')
        time                = '2.h'
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/flye", mode: 'copy', overwrite: true ]
        ext.args            = "--genome-size 2.8m --asm-coverage 50"
        ext.seqmethod       = "--nano-hq"
        ext.when            = { params.platform == "nanopore" }
    }
    withName: format_cdm {
        container           = (params.offline ? "${params.containers_dir}/bonsai-prp.sif" : "docker://clinicalgenomicslund/bonsai-prp:1.3.1")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/${params.cdm_dir}", mode: 'copy', overwrite: true ]
    }
    withName: format_jasen {
        container           = (params.offline ? "${params.containers_dir}/bonsai-prp.sif" : "docker://clinicalgenomicslund/bonsai-prp:1.3.1")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/analysis_result", mode: 'copy', overwrite: true ]
    }
    withName: freebayes {
        container           = (params.offline ? "${params.containers_dir}/freebayes.sif" : "https://depot.galaxyproject.org/singularity/freebayes:1.3.6--hbfe0e7f_2")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/${params.vcf_dir}", mode: 'copy', overwrite: true ]
        ext.args            = "-C 2 -F 0.2 --pooled-continuous"
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
    withName: gambitcore {
        cpus                = 2
        memory              = '2.GB'
        container           = (params.offline ? "${params.containers_dir}/gambitcore.sif" : "docker://clinicalgenomicslund/gambitcore:0.0.2")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/gambitcore", mode: 'copy', overwrite: true ]
    }
    withName: hostile {
        cpus                = 2
        memory              = '4.GB'
        container           = (params.offline ? "${params.containers_dir}/hostile.sif" : "https://depot.galaxyproject.org/singularity/hostile:2.0.0--pyhdfd78af_0")
        ext.args            = "--airplane"
        ext.when            = { params.use_hostile }
    }
    withName: kraken {
        memory              = (params.ci ? params.ci_mem_max : '100.GB')
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        container           = (params.offline ? "${params.containers_dir}/kraken2.sif" : "https://depot.galaxyproject.org/singularity/kraken2:2.1.2--pl5321h9f5acd7_3")
        ext.args            = "--gzip-compressed"
        ext.when            = { params.use_kraken }
    }
    withName: mask_polymorph_assembly {
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/mask", mode: 'copy', overwrite: true ]
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
    withName: medaka {
        container           = (params.offline ? "${params.containers_dir}/medaka.sif" : "https://depot.galaxyproject.org/singularity/medaka:1.11.3--py39h05d5c5e_0")
        cpus                = (params.ci ? params.ci_cpus_max : 20)
        memory              = (params.ci ? params.ci_mem_max : '32.GB')
        time                = '2.h'
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/medaka", mode: 'copy', overwrite: true ]
        ext.args            = "-t 40 --bacteria"
        ext.when            = { params.platform == "nanopore" }
    }
    withName: minimap2_align_assembly {
        cpus                = 4
        memory              = '12.GB'
        container           = (params.offline ? "${params.containers_dir}/minimap2.sif" : "https://depot.galaxyproject.org/singularity/minimap2:2.28--h577a1d6_4")
        ext.args            = "-a -x map-ont"
        ext.when            = { params.species != "mycobacterium tuberculosis" && params.platform == "nanopore" }
    }
    withName: minimap2_align_ref {
        cpus                = 4
        memory              = '12.GB'
        container           = (params.offline ? "${params.containers_dir}/minimap2.sif" : "https://depot.galaxyproject.org/singularity/minimap2:2.28--h577a1d6_4")
        ext.args            = "-a -x map-ont"
        ext.when            = { params.reference_genome && params.species != "mycobacterium tuberculosis" && params.platform == "nanopore" }
    }
    withName: minimap2_index {
        container           = (params.offline ? "${params.containers_dir}/minimap2.sif" : "https://depot.galaxyproject.org/singularity/minimap2:2.28--h577a1d6_4")
        ext.when            = { params.species != "mycobacterium tuberculosis" && params.platform == "nanopore" }
    }
    withName: mlst {
        container           = (params.offline ? "${params.containers_dir}/mlst.sif" : "https://depot.galaxyproject.org/singularity/mlst:2.23.0--hdfd78af_1")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/mlst", mode: 'copy', overwrite: true ]
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
    withName: mykrobe {
        memory              = '4.GB'
        container           = (params.offline ? "${params.containers_dir}/mykrobe.sif" : "https://depot.galaxyproject.org/singularity/mykrobe:0.12.2--py39h70e0db4_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/mykrobe", mode: 'copy', overwrite: true ]
        ext.args            = "--species tb --format csv"
        ext.when            = { params.species == "mycobacterium tuberculosis" }
    }
    withName: nanoplot {
        cpus                = 4
        container           = (params.offline ? "${params.containers_dir}/nanoplot.sif" : "https://depot.galaxyproject.org/singularity/nanoplot:1.43.0--pyhdfd78af_1")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/nanoplot", mode: 'copy', overwrite: true ]
        ext.when            = { params.platform == "nanopore" }
    }
    withName: post_align_qc {
        memory              = '2.GB'
        container           = (params.offline ? "${params.containers_dir}/bonsai-prp.sif" : "docker://clinicalgenomicslund/bonsai-prp:1.3.1")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/postalignqc", mode: 'copy', overwrite: true ]
        ext.when            = { params.species != "streptococcus" }
    }
    withName: quast {
        container           = (params.offline ? "${params.containers_dir}/quast.sif" : "https://depot.galaxyproject.org/singularity/quast:5.2.0--py310pl5321hc8f18ef_2")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/quast", mode: 'copy', overwrite: true ]
    }
    withName: resfinder {
        container           = (params.offline ? "${params.containers_dir}/resfinder.sif" : "https://depot.galaxyproject.org/singularity/resfinder:4.7.2--pyhdfd78af_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/resfinder", mode: 'copy', overwrite: true ]
        ext.nanopore_args   = (params.platform == "nanopore" ? "--nanopore --ignore_indels --ignore_stop_codons" : "")
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
    withName: samtools_coverage {
        container           = (params.offline ? "${params.containers_dir}/samtools.sif" : "https://depot.galaxyproject.org/singularity/samtools:1.17--h00cdaf9_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/coverage", mode: 'copy', overwrite: true ]
    }
    withName: samtools_index_assembly {
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = '2.GB'
        container           = (params.offline ? "${params.containers_dir}/samtools.sif" : "https://depot.galaxyproject.org/singularity/samtools:1.17--h00cdaf9_0")
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
    withName: samtools_index_ref {
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = '2.GB'
        container           = (params.offline ? "${params.containers_dir}/samtools.sif" : "https://depot.galaxyproject.org/singularity/samtools:1.17--h00cdaf9_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/${params.bam_dir}", mode: 'copy', overwrite: true ]
        ext.when            = { params.reference_genome && params.species != "mycobacterium tuberculosis" }
    }
    withName: samtools_sort_assembly {
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = (params.ci ? params.ci_mem_max : '20.GB')
        container           = (params.offline ? "${params.containers_dir}/samtools.sif" : "https://depot.galaxyproject.org/singularity/samtools:1.17--h00cdaf9_0")
        ext.when            = { params.species != "mycobacterium tuberculosis" && params.platform == "nanopore" }
    }
    withName: samtools_sort_ref {
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = (params.ci ? params.ci_mem_max : '20.GB')
        container           = (params.offline ? "${params.containers_dir}/samtools.sif" : "https://depot.galaxyproject.org/singularity/samtools:1.17--h00cdaf9_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/${params.bam_dir}", mode: 'copy', overwrite: true ]
        ext.when            = { params.reference_genome && params.species != "mycobacterium tuberculosis" && params.platform == "nanopore" }
    }
    withName: save_analysis_metadata {
        container           = (params.offline ? "${params.containers_dir}/bonsai-prp.sif" : "docker://clinicalgenomicslund/bonsai-prp:1.3.1")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/analysis_metadata", mode: 'copy', overwrite: true ]
    }
    withName: sccmec {
        cpus                = 2
        memory              = '2.GB'
        container           = (params.offline ? "${params.containers_dir}/sccmec.sif" : "https://depot.galaxyproject.org/singularity/sccmec:1.2.0--hdfd78af_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/sccmec", mode: 'copy', overwrite: true ]
        ext.when            = { params.species == "staphylococcus aureus" }
    }
    withName: seqtk_sample {
        container           = (params.offline ? "${params.containers_dir}/seqtk.sif" : "https://depot.galaxyproject.org/singularity/seqtk:1.4--he4a0461_2")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/seqtk_sample", mode: 'copy', overwrite: true ]
        ext.when            = { params.target_sample_size }
    }
    withName: serotypefinder {
        cpus                = 2
        container           = (params.offline ? "${params.containers_dir}/serotypefinder.sif" : "https://depot.galaxyproject.org/singularity/serotypefinder:2.0.2--py312hdfd78af_1")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/serotypefinder", mode: 'copy', overwrite: true ]
        ext.when            = { (params.species in ["escherichia coli", "klebsiella pneumoniae"]) }
    }
    withName: shigapass {
        cpus                = 2
        container           = (params.offline ? "${params.containers_dir}/shigapass.sif" : "https://depot.galaxyproject.org/singularity/shigapass:1.5.0--hdfd78af_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/shigapass", mode: 'copy', overwrite: true ]
        ext.when            = { params.species == "escherichia coli" }
    }
    withName: ska_build {
        container           = (params.offline ? "${params.containers_dir}/ska2.sif" : "https://depot.galaxyproject.org/singularity/ska2:0.3.10--h4349ce8_0")
        cpus                = 2
        memory              = '10.GB'
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/ska", mode: 'copy', overwrite: true ]
        ext.args            = "-k 31"
    }
    withName: skesa {
        container           = (params.offline ? "${params.containers_dir}/skesa.sif" : "https://depot.galaxyproject.org/singularity/skesa:2.4.0--he1c1bb9_0")
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = (params.ci ? params.ci_mem_max : '32.GB')
        time                = '2.h'
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/skesa", mode: 'copy', overwrite: true ]
        ext.when            = { params.use_skesa && params.platform == "illumina" }
    }
    withName: snippy {
        memory              = (params.ci ? params.ci_mem_max : '32.GB')
        container           = (params.offline ? "${params.containers_dir}/snippy.sif" : "https://depot.galaxyproject.org/singularity/snippy:4.6.0--hdfd78af_2")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/snippy", mode: 'copy', overwrite: true ]
        ext.when            = { params.species == "mycobacterium tuberculosis" }
    }
    withName: sourmash {
        container           = (params.offline ? "${params.containers_dir}/sourmash.sif" : "https://depot.galaxyproject.org/singularity/sourmash:4.8.2--hdfd78af_0")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/sourmash", mode: 'copy', overwrite: true ]
        ext.args            = "-p k=31,k=51,scaled=1000"
    }
    withName: spades_illumina {
        container           = (params.offline ? "${params.containers_dir}/spades.sif" : "https://depot.galaxyproject.org/singularity/spades:3.15.5--h95f258a_1")
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = (params.ci ? params.ci_mem_max : '15.GB')
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/spades_illumina", mode: 'copy', overwrite: true ]
        ext.args            = "--isolate"
        ext.when            = { !params.use_skesa && params.platform == "illumina" }
    }
    withName: spades_iontorrent {
        container           = (params.offline ? "${params.containers_dir}/spades.sif" : "https://depot.galaxyproject.org/singularity/spades:3.15.5--h95f258a_1")
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = (params.ci ? params.ci_mem_max : '15.GB')
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/spades_iontorrent", mode: 'copy', overwrite: true ]
        ext.args            = "--iontorrent --careful --sc"
        ext.when            = { !params.use_skesa && params.platform == "iontorrent" }
    }
    withName: spatyper {
        cpus                = 2
        memory              = '2.GB'
        container           = (params.offline ? "${params.containers_dir}/spatyper.sif" : "https://depot.galaxyproject.org/singularity/spatyper:0.3.3--pyhdfd78af_3")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/spatyper", mode: 'copy', overwrite: true ]
        ext.when            = { params.species == "staphylococcus aureus" }
    }
    withName: tbprofiler_mergedb {
        cpus                = (params.ci ? params.ci_cpus_max : 16)
        memory              = (params.ci ? params.ci_mem_max : '20.GB')
        container           = (params.offline ? "${params.containers_dir}/tb-profiler.sif" : "https://depot.galaxyproject.org/singularity/tb-profiler:6.3.0--pyhdfd78af_0")
        publishDir          = [ [ path: "${params.outdir}/${params.species_dir}/tbprofiler_mergedb", mode: 'copy', overwrite: true, pattern: '*.json' ], [ path: "${params.outdir}/${params.species_dir}/${params.vcf_dir}", mode: 'copy', overwrite: true, pattern: '*.{vcf.gz}' ], [ path: "${params.outdir}/${params.species_dir}/${params.bam_dir}", mode: 'copy', overwrite: true, pattern: '*.bam*' ] ]
        ext.args            = "--external_db ${params.root}/assets/tbdb/converged_who_fohm_tbdb --calling_params '-q 15'"
        ext.when            = { params.species == "mycobacterium tuberculosis" }
    }
    withName: virulencefinder {
        cpus                = 2
        container           = (params.offline ? "${params.containers_dir}/virulencefinder.sif" : "https://depot.galaxyproject.org/singularity/virulencefinder:2.0.4--hdfd78af_1")
        publishDir          = [ path: "${params.outdir}/${params.species_dir}/virulencefinder", mode: 'copy', overwrite: true ]
        ext.when            = { params.species != "mycobacterium tuberculosis" }
    }
}
