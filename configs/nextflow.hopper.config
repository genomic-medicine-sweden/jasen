singularity{
  enabled = true
  runOptions = '--bind /fs1/ --bind /local/'
}

process {
    executor='slurm'
    queue='normal'
    time=2.h

	withLabel: 'process_high' {
		cpus = 4
		memory = '16 GB'
		time = '4h'
	}
	withLabel: 'process_medium' {
		cpus = 2
		memory = '8 GB'
		time = '1h'
	}
	withLabel: 'process_low' {
		cpus = 1
		memory = '1 GB'
		time = '1h'
	}

	withName: 'ariba_run' {
		container = "/fs1/resources/containers/ariba_2.14.6.sif"
		memory = '32 GB'
		outdir = "/fs1/results_dev/micro/ariba"
	}
	withName: 'ariba_summary' {
		container = "/fs1/resources/containers/ariba_2.14.6.sif"
		outdir = "/fs1/results_dev/micro/ariba"
	}
	withName: 'bwa_mem|bwa_index' {
		container = "/fs1/resources/containers/bwa_0.7.17.sif"
		cpus = 16
		memory = '32 GB'
		time = '1h'
		outdir = "/fs1/results_dev/micro/bwa"
	}
	withName: 'samtools_sort|samtools_index' {
		container = "/fs1/resources/containers/samtools_1.12.sif"
		container = "https://depot.galaxyproject.org/singularity/samtools%3A1.9--h91753b0_5"
		outdir = "/fs1/results_dev/micro/samtools"
	}
	withName: 'spades' {
		container = "/fs1/resources/containers/spades_3.15.2.sif"
		cpus = 16
		memory = '64 GB'
		time = '2h'
		outdir = "/fs1/results_dev/micro/spades"
	}
	withName: quast {
		container = "/fs1/resources/containers/quast_5.0.2.sif"
		outdir = "/fs1/results_dev/micro/quast"
	}
	withName: mlst {
		container = "/fs1/resources/containers/mlst_2.19.0.sif"
		outdir = "/fs1/results_dev/micro/mlst"
	}
	withName: kraken {
		cpus = 16
		memory = '48 GB'
		time = '2h'
		container = "/fs1/resources/containers/kraken2_2.1.2.sif"
		outdir = "/fs1/results_dev/micro/kraken"
	}
	withName: bracken {
		cpus = 16
		memory = '48 GB'
		time = '2h'
		container = "/fs1/resources/containers/bracken_2.6.1.sif"
		outdir = "/fs1/results_dev/micro/kraken"
	}
	withName: resfinder {
		container = "/fs1/resources/containers/resfinder_4.1.5.sif"
		outdir = "/fs1/results_dev/micro/resfinder"
	}
	withName: virulencefinder {
		container = "/fs1/resources/containers/virulencefinder_2.0.4.sif"
		outdir = "/fs1/results_dev/micro/virulencefinder"
	}
	withName: freebayes {
		container = "/fs1/resources/containers/freebayes_1.3.5.sif"
		outdir = "/fs1/results_dev/micro/freebayes"
	}
	withName: 'chewbbaca_allelecall|chewbbaca_split_results|chewbbaca_split_missing_loci' {
		container = "/fs1/resources/containers/chewbbaca_2.8.5.sif"
		cpus = 7
		outdir = "/fs1/results_dev/micro/chewbbaca"
	}
	withName: 'ariba_summary_to_json' {
		container = "/fs1/resources/containers/ariba_2.14.6.sif"
		outdir = "/fs1/results_dev/micro/ariba"
    }
	withName: 'post_align_qc' {
		container = "/fs1/resources/containers/postAlignQc_0.0.1.sif"
		outdir = "/fs1/results_dev/micro/postalignqc"
    }
    withName: 'export_to_cgviz' {
		outdir = "/fs1/results_dev/cron/cgviz"
    }
    withName: 'export_to_cdm' {
		outdir = "/fs1/results_dev/cron/qc"
    }
}

params {
    // DATABASES //
	resfinderDb = '/fs1/resources/ref/micro/resfinder_db'
	pointfinderDb = '/fs1/resources/ref/micro/pointfinder_db'
	virulencefinderDb = '/fs1/resources/ref/micro/virulencefinder_db'
	mlstBlastDb = '/fs1/resources/micro/mlst/2.10/db/blast'
    // INPUT & OUTPUT //
	pipelineOutputDir = '/fs1/results_dev/micro'
	localTempDir = '/tmp'
    // PIPELINE OPTIONS //
	useKraken = true
	krakenDb = '/fs1/resources/ref/micro/krakenstd'
	
}

profiles {
	staphylococcus_aureus {
		params.specie = 'staphylococcus aureus'
		params.genomeReference = '/fs1/resources/ref/micro/species/saureus/ref.fasta'
		params.genomeReference = '/fs1/resources/ref/micro/species/saureus/ref.fasta'
		params.aribaReference = '/fs1/resources/ref/micro/species/saureus/ariba/02.cdhit.all.fa'
		params.cgmlstDb = '/home/markjo/cgmlst'
		params.cgmlstSchema = '/home/markjo/cgmlst.bed'
		params.trainingFile = '/home/markjo/prodigal.trn'
		params.useVirulenceDbs = ['s.aureus_hostimm', 's.aureus_exoenzyme', 's.aureus_toxin']
	}

	escherichia_coli {
		params.specie = 'escherichia coli'
		params.genomeReference = '/fs1/resources/ref/micro/species/ecoli/ref.fasta'
		params.aribaReference = '/fs1/resources/ref/micro/species/ecoli/ariba/02.cdhit.all.fa'
		params.cgmlstDb = '/fs1/resources/ref/micro/species/ecoli/cgmlst'
		params.trainingFile = '/fs1/resources/ref/micro/species/ecoli/prodigal.trn'
		params.useVirulenceDbs = ['virulence_ecoli']
	}

	klebsiella_pneumoniae {
		params.specie = 'klebsiella pneumoniae'
		params.genomeReference = '/fs1/resources/ref/micro/species/klebsiella/ref.fasta'
		params.aribaReference = '/fs1/resources/ref/micro/species/klebsiella/ariba/02.cdhit.all.fa'
		params.cgmlstDb = '/fs1/resources/ref/micro/species/klebsiella/cgmlst'
		params.trainingFile = '/fs1/resources/ref/micro/species/klebsiella/prodigal.trn'
	}
}
